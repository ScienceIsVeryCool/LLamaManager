{
  "scenario": {
    "name": "Cellular Automata Development",
    "version": "1.0",
    "description": "Iterative development of a cellular automata simulation with code review"
  },
  
  "agentTemplates": {
    "juniorDev": {
      "model": "gemma3:12b",
      "temperature": 0.7,
      "systemPrompt": "You are a Junior Software Engineer who writes clean, simple Python code. Focus on creating working solutions using libraries where appropriate.",
      "defaultContext": "rolling"
    },
    "seniorReviewer": {
      "model": "gemma3:12b", 
      "temperature": 0.3,
      "systemPrompt": "You are a Senior Engineer who provides blunt, actionable feedback. Be concise and direct. Focus on critical issues only."
    }
  },
  
  "actionTemplates": {
    "draftSolution": {
      "promptTemplate": "Create a draft Python solution for: {{task}}\n\nRequirements:\n- Use appropriate libraries (matplotlib, numpy, etc.)\n- Keep it simple but functional\n- Include visualization\n- Add clear comments"
    },
    "generateSolution": {
      "promptTemplate": "Create a complete Python solution for: {{task}}\n\nRequirements:\n- Use appropriate libraries (matplotlib, numpy, etc.)\n- Keep it simple but functional\n- Include visualization\n- Add clear comments"
    },
    "reviewCode": {
      "promptTemplate": "Review this Python code critically. Focus on:\n- Correctness and bugs\n- Code structure and clarity\n- Performance issues\n- Missing functionality\n\nBe blunt and direct. If it needs a complete rewrite, say so.\n\nCode to review:\n{{code}}"
    },
    "reviewCodeSyntax": {
      "promptTemplate": "Review this Python code for syntax errors and obvious bugs. Be direct and specific.\n\nCode to review:\n{{code}}"
    },
    "reviseCode": {
      "promptTemplate": "Based on this feedback:\n{{feedback}}\n\nRevise this code to address ALL the issues mentioned:\n{{code}}\n\nProvide the complete revised solution."
    }
  },
  
  "execution": [
    {
      "action": "createAgent",
      "params": {
        "template": "juniorDev",
        "instanceName": "junior1"
      }
    },
    {
      "action": "createAgent",
      "params": {
        "template": "seniorReviewer",
        "instanceName": "senior1"
      }
    },
    {
      "action": "createAgent",
      "params": {
        "template": "seniorReviewer",
        "instanceName": "senior2"
      }
    },
    {
      "action": "draftSolution",
      "agent": "junior1",
      "params": {
        "task": "Draft a Python cellular automata simulation using heavy lifting open source libraries. Keep the code very short. Make the solution have visualizations and show emergence. The simulation should run indefinitely where the initial spark of life adapts. I do not want something like Conways Game of Life, I want something new."
      },
      "output": "draft"
    },
    {
      "action": "generateSolution",
      "agent": "junior1",
      "params": {
        "task": "Now give the full solution to making the python cellular automata simulation with visualizations. Keep your code length minimal by leveraging libraries"
      },
      "output": "initialCode"
    },
    {
      "action": "reviewCode",
      "agent": "senior1",
      "params": {
        "code": "{{outputs.initialCode}}"
      },
      "output": "review1"
    },
    {
      "action": "reviewCodeSyntax",
      "agent": "senior2",
      "params": {
        "code": "{{outputs.initialCode}}"
      },
      "output": "review2"
    },
    {
      "action": "loop",
      "iterations": 3,
      "steps": [
        {
          "action": "reviseCode",
          "agent": "junior1",
          "params": {
            "code": "{{lastOutput('junior1')}}",
            "feedback": "{{lastOutput('senior1')}}"
          },
          "output": "revision_{{iteration}}"
        },
        {
          "action": "reviewCode", 
          "agent": "senior1",
          "params": {
            "code": "{{lastOutput('junior1')}}"
          },
          "output": "review_{{iteration}}_feedback"
        }
      ]
    },
    {
      "action": "saveToFile",
      "params": {
        "content": "{{lastOutput('junior1')}}",
        "filename": "cellular_automata.py"
      }
    },
    {
      "action": "saveToFile",
      "params": {
        "content": "{{lastOutput('senior1')}}",
        "filename": "final_review.md"
      }
    }
  ],
  
  "config": {
    "logLevel": "info",
    "saveIntermediateOutputs": true,
    "outputDirectory": "./cellular_automata_results_simple",
    "queryTimeout": 300
  }
}